$(window).scroll(function () {
  if ($(this).scrollTop() > 1) {
    $('header').addClass('sticky');
  } else {
    $('header').removeClass('sticky');
  }
});


$(document).ready(function () {
  $('#toggle').click(function () {
    var elem = $('#toggle').text();
    if (elem == 'Read More') {
      //Stuff to do when btn is in the read more state
      $('#toggle').text('Read Less');
      $('#text').slideDown();
    } else {
      //Stuff to do when btn is in the read less state
      $('#toggle').text('Read More');
      $('#text').slideUp();
    }
  });
});
$('#web-carousel').owlCarousel({
  loop: true,
  margin: 30,
  dots: true,
  nav: false,
  items: 1,
  smartSpeed: 1000,
  autoplay: true,
  autoplayTimeout: 4000,
  autoplayHoverPause: true,
});
$('#web-carousel-mobile').owlCarousel({
  items: 1,
  loop: true,
  margin: 15,
  singleItem: true,
  nav: false,
  dots: false,
  smartSpeed: 1000,
  autoplay: true,
  autoplayTimeout: 4000,
  autoplayHoverPause: true,
  responsive: {
    0: {
      items: 1,
    },
    600: {
      items: 1,
    },
    1000: {
      items: 2,
    },
  },
});
$('#web-carousel-mobile-1').owlCarousel({
  items: 1,
  loop: true,
  margin: 15,
  singleItem: true,
  nav: false,
  dots: false,
  smartSpeed: 1000,
  autoplay: true,
  autoplayTimeout: 4000,
  autoplayHoverPause: true,
  responsive: {
    0: {
      items: 1,
    },
    600: {
      items: 1,
    },
    1000: {
      items: 2,
    },
  },
});
$('.hmclients-slider').owlCarousel({
  items: 1,
  loop: true,
  margin: 15,
  singleItem: true,
  nav: false,
  dots: false,
  smartSpeed: 1000,
  autoplay: true,
  autoplayTimeout: 4000,
  autoplayHoverPause: true,
  responsive: {
    0: {
      items: 2,
    },
    600: {
      items: 3,
    },
    767: {
      items: 4,
    },
    1000: {
      items: 5,
    },
    1099: {
      items: 6,
    },
    1299: {
      items: 7,
    },
    1455: {
      items: 8,
    },
  },
});


$('.hmclient_item_gggs').owlCarousel({
  items: 1,
  loop: true,
  margin: 15,
  singleItem: true,
  nav: false,
  dots: false,
  smartSpeed: 1000,
  autoplay:true,
  autoplayTimeout: 4000,
  autoplayHoverPause: true,
  responsive: {
    0: {
      items: 1,
    },
    600: {
      items: 1,
    },
    767: {
      items: 2,
    },
    1000: {
      items: 2,
    },
    1099: {
      items: 2,
    },
    1299: {
      items: 2,
    },
    1455: {
      items: 2,
    },
  },
});

$('.hmclients-slider-logo').owlCarousel({
  items: 1,
  loop: true,
  margin: 15,
  singleItem: true,
  nav: false,
  dots: false,
  smartSpeed: 1000,
  autoplay: true,
  autoplayTimeout: 4000,
  autoplayHoverPause: true,
  responsive: {
    0: {
      items: 1,
    },
    576: {
      items: 2,
    },
    1000: {
      items: 2,
    },
  },
});
$('.hmclients-slider-bov').owlCarousel({
  items: 1,
  loop: true,
  margin: 15,
  singleItem: true,
  nav: false,
  dots: true,
  smartSpeed: 1000,
  autoplay: true,
  autoplayTimeout: 4000,
  autoplayHoverPause: true,
  responsive: {
    0: {
      items: 1,
    },
    576: {
      items: 1,
    },
    1000: {
      items: 2,
    },
  },
});
function myFunction() {
  var dots = document.getElementById('dots');
  var moreText = document.getElementById('more');
  var btnText = document.getElementById('myBtn');
  if (dots.style.display === 'none') {
    dots.style.display = 'inline';
    btnText.innerHTML = 'Read more';
    moreText.style.display = 'none';
  } else {
    dots.style.display = 'none';
    btnText.innerHTML = 'Read less';
    moreText.style.display = 'inline';
  }
}
$('#exampleModal').on('show.bs.modal', function (event) {
  var button = $(event.relatedTarget); // Button that triggered the modal
  var recipient = button.data('whatever'); // Extract info from data-* attributes
  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
  var modal = $(this);
  modal.find('.modal-body').val(recipient);
});


$(document).ready(function(){
  //call the function when ready
  slideShow();


//Actually define the slideShow()
function slideShow(){
  
  //*** Conditional & Variables ***//
  
    //Define the current img
    var current = $('#slider .show');
    //If index != 0/false then show next img
  var next = current.next().length ? 
      current.next() :
      // if index == false then show first img
      current.siblings().first();
  
   //*** Swap out the imgs and class ***//
   current.hide().removeClass('show');
   next.fadeIn("slow").addClass('show');
  
  
  //*** Repeat function every 3 seconds ***//
  setTimeout(slideShow, 3000);
  
};
  
}); //end ready


$(function() {
  
  var html = $('html');
  // Detections
  if (!("ontouchstart" in window)) {
    html.addClass("noTouch");
  }
  if ("ontouchstart" in window) {
    html.addClass("isTouch");
  }
  if ("ontouchstart" in window) {
    html.addClass("isTouch");
  }
  if (document.documentMode || /Edge/.test(navigator.userAgent)) {
    if (navigator.appVersion.indexOf("Trident") === -1) {
      html.addClass("isEDGE");
    } else {
      html.addClass("isIE isIE11");
    }
  }
  if (navigator.appVersion.indexOf("MSIE") !== -1) {
    html.addClass("isIE");
  }
  if (
    navigator.userAgent.indexOf("Safari") != -1 &&
    navigator.userAgent.indexOf("Chrome") == -1
  ) {
    html.addClass("isSafari");
  }

  // On Screen

  $.fn.isOnScreen = function() {
    var elementTop = $(this).offset().top,
      elementBottom = elementTop + $(this).outerHeight(),
      viewportTop = $(window).scrollTop(),
      viewportBottom = viewportTop + $(window).height();
    return elementBottom > viewportTop && elementTop < viewportBottom;
  };

  function detection() {
    for (var i = 0; i < items.length; i++) {
      var el = $(items[i]);

      if (el.isOnScreen()) {
        el.addClass("in-view");
      } else {
        el.removeClass("in-view");
      }
    }
  }

  var items = document.querySelectorAll(
    "*[data-animate-in], *[data-detect-viewport]"
  ),
    waiting = false,
    w = $(window);

  w.on("resize scroll", function() {
    if (waiting) {
      return;
    }
    waiting = true;
    detection();

    setTimeout(function() {
      waiting = false;
    }, 100);
  });

  $(document).ready(function() {
    setTimeout(function() {
      detection();
    }, 500);

    for (var i = 0; i < items.length; i++) {
      var d = 0,
        el = $(items[i]);
      if (items[i].getAttribute("data-animate-in-delay")) {
        d = items[i].getAttribute("data-animate-in-delay") / 1000 + "s";
      } else {
        d = 0;
      }
      el.css("transition-delay", d);
    }
  });
});


$(document).on('click', '.logo-bar .nav-link', function (event) {
  var target = $(this).attr('href');

  if (target && target.startsWith('#') && $(target).length) {
      event.preventDefault();

      var scrollToPosition = $(target).offset().top - 50; // 200px gap

      // Prevent scrolling to negative values
      if (scrollToPosition < 0) {
          scrollToPosition = 0;
      }

      $('html, body').animate({
          scrollTop: scrollToPosition
      }, 500);
  }
});
